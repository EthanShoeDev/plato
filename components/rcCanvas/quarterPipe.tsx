/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { Mesh } from "three";
import niceColors from "nice-color-palettes";
import {
  ConvexHullCollider,
  MeshCollider,
  RigidBody,
  RigidBodyProps,
} from "@react-three/rapier";

type GLTFResult = GLTF & {
  nodes: {
    qPipe: THREE.Mesh;
  };
  materials: {};
};

export function QuarterPipe(props: RigidBodyProps) {
  const { nodes, materials } = useGLTF("/qPipe.glb") as unknown as GLTFResult;

  return (
    <RigidBody {...props} type="fixed" colliders={false}>
      <MeshCollider type="trimesh">
        <mesh receiveShadow geometry={nodes.qPipe.geometry}>
          <meshStandardMaterial color={niceColors[50][0]} />
        </mesh>
      </MeshCollider>
    </RigidBody>
  );
}

useGLTF.preload("/qPipe.glb");
